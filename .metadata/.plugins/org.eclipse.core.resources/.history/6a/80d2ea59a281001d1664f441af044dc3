package controller;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import DBPKG.SenatorDBPKG;


@WebServlet("/")
public class SenatorController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
   
    public SenatorController() {
        super();
        
    }

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		doPor(request, response);
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		doPor(request, response);
	}
	
	protected void doPor(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String context = request.getContextPath();
		String command = request.getServletPath();
		String site = null;
		
		System.out.println(context + ", " + command);
		
		SenatorDBPKG senator = new SenatorDBPKG();
		
		switch(command) {
		case "/home":
			site = "index.jsp";
			break;
		case "/list":
			site = senator.selectAll(request, response);
			break; //一定要放？？？？？？！！！！！！
		case "/vote":
			site = "vote.jsp";
			break;
		case "/insert":
			int result = senator.insert(request, response);	//这里是用int型来接受结果，那么DBPK中insert的type也要改成int型，用这里的result来接受结果。而不是返回“/vite.jsp”页面
			response.setContentType("text/html; charset=UTF-8");
			PrintWriter out = response.getWriter();
			if(result == 1 ) {
				out.println("<script>");
				out.println("alert('투표하기 정보가 정상적으로 등록 되었습니다!'); location.href='" + context +"'; ");
				out.println("</script>");
				out.flush();
			}
			
			break;
			
		case "/votelist":
			site = senator.selectlist(request, response);
			break; //一定要放？？？？？？！！！！！！
		}
		
		
			
		
		getServletContext().getRequestDispatcher("/" + site).forward(request, response);
	}

}
